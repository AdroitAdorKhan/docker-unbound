server:

  # The  verbosity  number, level 0 means no verbosity, only errors.
  # Level 1 gives operational information. Level  2  gives  detailed
  # operational  information. Level 3 gives query level information,
  # output per query.  Level 4 gives  algorithm  level  information.
  # Level 5 logs client identification for cache misses.  Default is
  # level 1.
  verbosity: 0
  
  # specify the interfaces to answer queries from by ip-address.
  # The default is to listen to localhost (127.0.0.1 and ::1).
  # specify 0.0.0.0 and ::0 to bind to all available interfaces.
  # specify every interface[@port] on a new 'interface:' labelled line.
  # The listen interfaces are not changed on reload, only on restart.
  # interface: 192.0.2.153
  # interface: 192.0.2.154@5003
  # interface: 2001:DB8::5
  # interface: eth0@5003
  interface: 0.0.0.0@8553
  
  # Enable IPv4, IPv6, UCP and TCP
  do-ip4: yes
  do-ip6: yes
  do-udp: yes
  do-tcp: yes
  
  # You want to leave this to no unless you have *native* IPv6. With 6to4 and
  # Terredo tunnels your web browser should favor IPv4 for the same reasons
  prefer-ip6: no

  # print statistics to the log (for every thread) every N seconds.
  # Set to "" or 0 to disable. Default is disabled.
  # statistics-interval: 600
  
  # enable cumulative statistics, without clearing them after printing.
  # statistics-cumulative: yes
  
  # the working directory. The relative files in this config are
  # relative to this directory. If you give "" the working directory
  # is not changed.
  # If you give a server: directory: dir before include: file statements
  # then those includes can be relative to the working directory.
  directory: "/etc/unbound"
  
  # the pid file
  pidfile: "/var/run/unbound/unbound.pid"
  
  # Refuse id.server and hostname.bind queries
  hide-identity: yes
  
  # the identity to report. Leave "" or default to return hostname.
  identity: "docker-unbound"
  
  # Refuse version.server and version.bind queries
  hide-version: yes
  
  # file to read root hints from.
  # get one from https://www.internic.net/domain/named.cache or https://www.internic.net/domain/named.root
  root-hints: "/root.hints"
  
  # File with trusted keys, kept uptodate using RFC5011 probes,
  # initial file like trust-anchor-file, then it stores metadata.
  # Use several entries, one per domain name, to track multiple zones.
  #
  # If you want to perform DNSSEC validation, run unbound-anchor before
  # you start Unbound (i.e. in the system boot scripts).
  # And then enable the auto-trust-anchor-file config item.
  # Please note usage of unbound-anchor root anchor is at your own risk
  # and under the terms of our LICENSE (see that file in the source).
  auto-trust-anchor-file: "/var/run/unbound/root.key"
  
  # Certificates used to authenticate connections made upstream.
  tls-cert-bundle: /etc/ssl/certs/ca-certificates.crt
  
  # If you give "" no chroot is performed. The path must not end in a /.
  # Can be uncommented if you do not need file access protection
  chroot: ""
  
  # Detach from the terminal, run in background, "yes" or "no".
  # Set the value to "no" when Unbound runs as systemd service.
  do-daemonize: no
  
  # Add localhost to the do-not-query-address list.
  do-not-query-localhost: no
  
  # the time to live (TTL) value lower bound, in seconds. Default 0.
  # If more than an hour could easily give trouble due to stale data.
  cache-min-ttl: 3600
  
  # the time to live (TTL) value cap for RRsets and messages in the
  # cache. Items are not cached for longer. In seconds.
  cache-max-ttl: 86400
  
  # the time to live (TTL) value cap for negative responses in the cache
  cache-max-negative-ttl: 300
  
  # Number  of  bytes size of the aggressive negative cache.
  neg-cache-size: 4m
  
  # Serve expired responses from cache, with serve-expired-reply-ttl in
  # the response, and then attempt to fetch the data afresh.
  serve-expired: yes
  
  # set to 0 to avoid warning message when cachedb module is loaded.
  # warning: cachedb: serve-expired-reply-ttl is set but not working for data originating from the external cache; 0 TLL is used for those.
  serve-expired-reply-ttl: 0  
  
  # Deny queries of type ANY with an empty response.
  # Works only on version 1.8 and above
  deny-any: yes
  
  # Harden against out of zone rrsets, to avoid spoofing attempts.
  harden-glue: yes
  
  # Ignore very large queries.
  harden-large-queries: yes
  
  # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
  # If you want to disable DNSSEC, set harden-dnssec stripped: no
  harden-dnssec-stripped: yes
  
  # Harden against algorithm downgrade when multiple algorithms are
  # advertised in the DS record.
  harden-algo-downgrade: yes
  
  # Send minimum amount of information to upstream servers to enhance privacy
  qname-minimisation: yes
  
  # if yes, Unbound doesn't insert authority/additional sections
  # into response messages when those sections are not required.
  minimal-responses: yes
  
  # EDNS reassembly buffer to advertise to UDP peers (the actual buffer
  # is set with msg-buffer-size).
  edns-buffer-size: 1232
  
  # Rotates RRSet order in response (the pseudo-random number is taken from
  # the query ID, for speed and thread safety).
  rrset-roundrobin: yes
  
  # Perform prefetching of close to expired message cache entries
  # This only applies to domains that have been frequently queried
  # This flag updates the cached domains
  prefetch: yes
  
  # Fetch the DNSKEYs earlier in the validation process, when a DS record is
  # encountered. This lowers the latency of requests at the expense of little
  # more CPU usage.
  prefetch-key: yes
  
  # the amount of memory to use for the message cache.
  # plain value in bytes or you can append k, m or G. default is "4Mb".
  # more cache memory. rrset-cache-size should twice what msg-cache-size is.
  msg-cache-size: 128m
  # the amount of memory to use for the RRset cache.
  rrset-cache-size: 256m
  
  # use SO_REUSEPORT to distribute queries over threads.
  # at extreme load it could be better to turn it off to distribute even.
  so-reuseport: yes
  
  # Minimize logs
  # Do not print one line per query to the log
  log-queries: no
  # Do not print one line per reply to the log
  log-replies: no
  # Do not print log lines that say why queries return SERVFAIL to clients
  log-servfail: no
  # Do not print log lines to inform about local zone actions
  log-local-actions: no
  # Do not print log lines that say why queries return SERVFAIL to clients
  # the log file, "" means log to stderr.
  logfile: ""
  
  access-control: 10.0.0.0/8 allow
  access-control: 127.0.0.0/8 allow
  access-control: 172.16.0.0/12 allow
  access-control: 192.168.0.0/16 allow
  # uncomment if you want public access
  access-control: 0.0.0.0/0 allow 
  
  # Ensure privacy of local IP ranges
  private-address: 10.0.0.0/8
  private-address: 169.254.0.0/16
  private-address: 172.16.0.0/12
  private-address: 192.168.0.0/16
  
  # Modules
  # List of module names separated by spaces. Order of modules is critical,
  # order decides the order of processing. Default is "validator iterator".
  # Added cachedb, should be just before the iterator.
  module-config: "validator cachedb iterator"
  
  # include other conf if u need to
  include: "/config/*.conf"
  
# CacheDB
# External backend DB as auxiliary cache.
# To enable, use --enable-cachedb to configure before compiling.
# Specify the backend name
# (default is "testframe", which has no use other than for debugging and
# testing) and backend-specific options.  The 'cachedb' module must be
# included in module-config, just before the iterator module.
cachedb:
  # Backend db name. Default db is in-memory backend named "testframe". Use redis
  backend: redis
  # Seed to calculate hash value from query information. Default is "default"
  #secret-seed: "unbound-config"
  
  # Redis
  # IP address of redis server. Default is 127.0.0.1
  redis-server-host: redis
  # TCP port number of redis server. Default is 6379
  redis-server-port: 6379
  # Period until unbound waits for response from redis sever. Default is 100ms
  redis-timeout: 100
  # Redis record expiration. If yes, unbound sets timeout for redis records so
  # that redis can evict expired keys automatically. If unbound is configured
  # with serve-expired this option internally reverts to no. Default is no
  redis-expire-records: no